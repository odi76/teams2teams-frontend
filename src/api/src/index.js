/**
 * Teams2Teams API prototype
 * This is a simple API in case of try the login functions out.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ErrorMessage from './model/ErrorMessage';
import LoginInput from './model/LoginInput';
import LoginOutput from './model/LoginOutput';
import Pong from './model/Pong';
import RegistrationData from './model/RegistrationData';
import AuthenticationApi from './api/AuthenticationApi';
import HealthcheckApi from './api/HealthcheckApi';


/**
* This_is_a_simple_API_in_case_of_try_the_login_functions_out_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Teams2TeamsApiPrototype = require('index'); // See note below*.
* var xxxSvc = new Teams2TeamsApiPrototype.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Teams2TeamsApiPrototype.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Teams2TeamsApiPrototype.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Teams2TeamsApiPrototype.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage,

    /**
     * The LoginInput model constructor.
     * @property {module:model/LoginInput}
     */
    LoginInput,

    /**
     * The LoginOutput model constructor.
     * @property {module:model/LoginOutput}
     */
    LoginOutput,

    /**
     * The Pong model constructor.
     * @property {module:model/Pong}
     */
    Pong,

    /**
     * The RegistrationData model constructor.
     * @property {module:model/RegistrationData}
     */
    RegistrationData,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The HealthcheckApi service constructor.
    * @property {module:api/HealthcheckApi}
    */
    HealthcheckApi
};
